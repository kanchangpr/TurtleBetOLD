package com.jetbet.betfair;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.jetbet.betfair.entities.CompetitionResult;
import com.jetbet.betfair.entities.EventResult;
import com.jetbet.betfair.entities.EventTypeResult;
import com.jetbet.betfair.entities.MarketFilter;
import com.jetbet.betfair.exceptions.APINGException;

/**
 * This is a demonstration class to show a quick demo of the new Betfair API-NG.
 * When you execute the class will:
 * <li>find a market (next horse race in the UK)</li>
 * <li>get prices and runners on this market</li>
 * <li>place a bet on 1 runner</li>
 * <li>handle the error</li>
 * 
 */
public class ApiNGJRescriptDemo {

	private ApiNgOperations rescriptOperations = ApiNgRescriptOperations.getInstance();
	private String applicationKey;
	private String sessionToken;

	public List<EventTypeResult> getlistOfEventType(String appKey, String ssoid) {

		this.applicationKey = appKey;
		this.sessionToken = ssoid;
		List<EventTypeResult> r = new ArrayList<EventTypeResult>();
		try {
			MarketFilter marketFilter;
			marketFilter = new MarketFilter();
			
			Set<String> eventTypeIdSet = new HashSet<String>();
			eventTypeIdSet.add("1");
			eventTypeIdSet.add("4");
			marketFilter.setEventTypeIds(eventTypeIdSet);
			
			System.out.println("(listEventTypes) Get all Event Types...\n");
			r = rescriptOperations.listEventTypes(marketFilter, applicationKey, sessionToken);
			for (int i = 0; i < r.size(); i++) {
				System.out.println("Event Type: " + r.get(i).getEventType());
				System.out.println("Market Count:: " + r.get(i).getMarketCount());
			}
		} catch (APINGException apiExc) {
			System.out.println(apiExc.toString());
		}
		return r;
	}
	
	public List<CompetitionResult> getlistOfComp(String appKey, String ssoid) {

		this.applicationKey = appKey;
		this.sessionToken = ssoid;
		List<CompetitionResult> response = new ArrayList<CompetitionResult>();
		try {
			MarketFilter marketFilter;
			marketFilter = new MarketFilter();
			
			Set<String> eventTypeIdSet = new HashSet<String>();
			//eventTypeIdSet.add("1");
			eventTypeIdSet.add("4");
			marketFilter.setEventTypeIds(eventTypeIdSet);
			
			
			System.out.println("(getlistOfComp) Get all Competition(Series)...\n");
			response = rescriptOperations.listComp(marketFilter, applicationKey, sessionToken);
			for (int i = 0; i < response.size(); i++) {
				System.out.println("Competiton : " + response.get(i).getCompetition());
				System.out.println("Market Count:: " + response.get(i).getMarketCount());
				System.out.println("Competition Region:: " + response.get(i).getCompetitionRegion());
			}
		} catch (APINGException apiExc) {
			System.out.println(apiExc.toString());
		}
		return response;
	}
	
	public List<EventResult> getlistOfEvent(String appKey, String ssoid) {

		this.applicationKey = appKey;
		this.sessionToken = ssoid;
		List<EventResult> response = new ArrayList<EventResult>();
		try {
			MarketFilter marketFilter;
			marketFilter = new MarketFilter();
			
			Set<String> eventTypeIdSet = new HashSet<String>();
			eventTypeIdSet.add("4");
			marketFilter.setEventTypeIds(eventTypeIdSet);
			
			Set<String> eventIdSet = new HashSet<String>();
			eventIdSet.add("10058381");
			//marketFilter.setEventIds(eventIdSet);
			
			
			System.out.println("(listEvents) Get all Events...\n");
			response = rescriptOperations.listEvents(marketFilter, applicationKey, sessionToken);
			for (int i = 0; i < response.size(); i++) {
				System.out.println("Event : " + response.get(i).getEvent());
				System.out.println("Market Count:: " + response.get(i).getMarketCount());
			}
		} catch (APINGException apiExc) {
			System.out.println(apiExc.toString());
		}
		return response;
	}


}
